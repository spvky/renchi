solving: bool

for solving {
	for &s, i in segments {
		pos = start
		shift = determine_shift
		for !s.finished {
			pos += shift
			tile := get_static_tile(t^, pos.x, pos.y)

			switch tile {
				case .Empty:
					length += 1
					if horizontal {
					empty_below := get_static_tile(t^, pos.x, pos.y + 1)  in water_passthrough
						if  empty_below {
							s.finished = true
						}
					} else {

					}

				case .Wall, .Door, .Water, .OneWay:

			}

		}
	}
}
